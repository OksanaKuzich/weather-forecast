{"mappings":"AAAA,IAAIA,EC+BJ,SAASC,EAAcC,GAErB,OADa,IAAIC,KAAKD,GACVE,qBC9Bd,MAAMC,EAASC,SAASC,cAAc,SAChCC,EAAUF,SAASC,cAAc,UAEvCF,EAAOI,iBAAiB,UAExBC,eAA4BC,GAC1BA,EAAEC,iBACF,MAAMC,EAAWF,EAAEG,OAAOC,SAASC,KAAKC,MAAMC,OACxCC,QFTDT,eAAyBG,GAC9B,MAAMO,EAAe,IAAIC,gBAAgB,CACvCC,EAAGT,EACHU,MAAO,EACPC,MAAO,qCAGT,IACE,MAAMC,QAAiBC,MACrB,gDAAgDN,KAIlD,OAFApB,QAAoByB,EAASE,OAC7BC,QAAQC,IAAI7B,GACLA,EACP,MAAO8B,GACPF,QAAQC,IAAIC,EAAMC,UENMC,CAAuBnB,GAC3CoB,QFSDvB,eAA4BM,GACjC,MAAMI,EAAe,IAAIC,gBAAgB,CACvCa,IAAKlB,EAAKkB,IACVC,IAAKnB,EAAKmB,IACVX,MAAO,qCAGT,IACE,MAAMC,QAAiBC,MACrB,mDAAmDN,KAE/CgB,QAAuBX,EAASE,OAEtC,OADAC,QAAQC,IAAIO,GACLA,EACP,MAAON,GACPF,QAAQC,IAAIC,EAAMC,UExBaM,CAA0BlB,EAAY,IAEvEX,EAAQ8B,WDdiBtB,ECcaG,EAAY,GDb3C,0CACOH,EAAKuB,SAASvB,EAAKwB,UAAUxB,EAAKyB,gCCahDjC,EAAQkC,mBACN,aDF0BC,ECGLV,EDFhB,wFAEGU,EAAQA,QAAQ,GAAGC,wCAEPD,EAAQA,QAAQ,GAAGE,+CACdF,EAAQG,KAAKC,KAAO,QAAQC,QAC7C,sDAEuC,IAA1BL,EAAQG,KAAKG,4CACbN,EAAQG,KAAKI,qCACjBP,EAAQQ,KAAKC,uCACVnD,EAAoC,IAAtB0C,EAAQU,IAAIC,sCAC3BrD,EAAmC,IAArB0C,EAAQU,IAAIE,gCAb1C,IAAuBZ,EAdvB,IAAoB3B","sources":["src/js/fetchWeather.js","src/js/markUp.js","src/index.js"],"sourcesContent":["let currentCity;\n\nexport async function fetchCity(cityName) {\n  const searchParams = new URLSearchParams({\n    q: cityName,\n    limit: 5,\n    appid: '588df5deb596ae223dd240564055e6fe',\n  });\n\n  try {\n    const response = await fetch(\n      `http://api.openweathermap.org/geo/1.0/direct?${searchParams}`\n    );\n    currentCity = await response.json();\n    console.log(currentCity);\n    return currentCity;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function fetchWeather(city) {\n  const searchParams = new URLSearchParams({\n    lat: city.lat,\n    lon: city.lon,\n    appid: '588df5deb596ae223dd240564055e6fe',\n  });\n\n  try {\n    const response = await fetch(\n      `https://api.openweathermap.org/data/2.5/weather?${searchParams}`\n    );\n    const currentWeather = await response.json();\n    console.log(currentWeather);\n    return currentWeather;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n","export function markUpCard(city) {\n  return `<div class=\"container\">\n          <h2>${city.name}, ${city.state}, ${city.country}</h2>\n        </div>`;\n}\n\nexport function markUpList(item) {\n  return item\n    .map(({ flags, name }) => {\n      return `<li class='list'><img class='flag' src=\"${flags.svg}\" alt=\"${name.official}\" width=70px><p>${name.official}</p></li>`;\n    })\n    .join('');\n}\n\nexport function markUpWeather(weather) {\n  return `<div class=\"container-wather\">\n          <img src='http://openweathermap.org/img/wn/${\n            weather.weather[0].icon\n          }@2x.png'>\n          <p>Weather: ${weather.weather[0].description}</p>\n          <p>Temperature: ${(weather.main.temp - 273.15).toFixed(\n            2\n          )}<span>&#8451;</span></p>\n          <p>Pressure: ${weather.main.grnd_level * 0.75}mm</p>\n          <p>Humidity: ${weather.main.humidity}%</p>\n          <p>Wind: ${weather.wind.speed}m/s</p>\n          <p>Sunrise: ${convertedDate(weather.sys.sunrise * 1000)}</p>\n          <p>Sunset: ${convertedDate(weather.sys.sunset * 1000)}</p>\n        </div>`;\n}\n\nfunction convertedDate(ms) {\n  const date = new Date(ms);\n  return date.toLocaleTimeString();\n}\n","import * as fetchWeather from './js/fetchWeather';\nimport * as markUp from './js/markUp';\n\nconst formEl = document.querySelector('.form');\nconst cardsEl = document.querySelector('.cards');\n\nformEl.addEventListener('submit', onSubmitForm);\n\nasync function onSubmitForm(e) {\n  e.preventDefault();\n  const cityName = e.target.elements.city.value.trim();\n  const fetchResult = await fetchWeather.fetchCity(cityName);\n  const fetchResultWeather = await fetchWeather.fetchWeather(fetchResult[0]);\n\n  cardsEl.innerHTML = markUp.markUpCard(fetchResult[0]);\n  cardsEl.insertAdjacentHTML(\n    'beforeend',\n    markUp.markUpWeather(fetchResultWeather)\n  );\n}\n"],"names":["$778421cc23fe6f05$var$currentCity","$ecc0c8bcf37892e8$var$convertedDate","ms","Date","toLocaleTimeString","$1f0dc3b9307be026$var$formEl","document","querySelector","$1f0dc3b9307be026$var$cardsEl","addEventListener","async","e","preventDefault","cityName","target","elements","city","value","trim","fetchResult","searchParams","URLSearchParams","q","limit","appid","response","fetch","json","console","log","error","message","$778421cc23fe6f05$export$f9b5030464ac40b3","fetchResultWeather","lat","lon","currentWeather","$778421cc23fe6f05$export$7a954b5c9a93cc61","innerHTML","name","state","country","insertAdjacentHTML","weather","icon","description","main","temp","toFixed","grnd_level","humidity","wind","speed","sys","sunrise","sunset"],"version":3,"file":"index.136ed765.js.map"}